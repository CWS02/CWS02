@model prjWastes6.Models.GHG_MST_COMMUTE

@{
    Layout = "~/Views/Shared/_LayoutMember.cshtml";
}
@{
    ViewBag.Title = "GHG_MST_COMMUTECreate";
}
<style>
    .text-center {
        text-align: center;
    }

    .align-right {
        text-align: right;
    }

    .nowrap {
        white-space: nowrap;
    }
</style>
<h2>員工通勤:新增</h2>
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

<!DOCTYPE html>
<script>
    $(document).ready(function () {

        // 為數字輸入框添加格式化事件
        $(".numeric-input").on("input", function () {
            formatNumberInput($(this));
        });


        // 提交表單時移除千位分隔符
        $("form").submit(function () {
            $(".numeric-input").each(function () {
                $(this).val($(this).val().replace(/,/g, ''));
            });
        });
    });

    // 格式化數字輸入框的值
    /*function formatNumberInput(input) {
        var val = input.val().replace(/,/g, ''); // 移除現有的千位分隔符
        if (val != '') {
            val = parseInt(val); // 確保輸入是一個數值
            input.val(val.toLocaleString()); // 使用toLocaleString()添加千位分隔符
        }
    }*/
    // 格式化數字輸入框的值
    function formatNumberInput(input) {
        var val = input.val().replace(/,/g, ''); // 移除現有的千位分隔符
        if (val != '') {
            var parts = val.split('.'); // 將輸入值拆分為整數部分和小數部分
            parts[0] = parseInt(parts[0]).toLocaleString(); // 格式化整數部分
            input.val(parts.join('.')); // 重新組合並設置輸入框的值
        }
    }

</script>
<html>


@if (ViewBag.Msg != null)
{
    <div class="alert alert-danger">@ViewBag.Msg</div>
}
<body>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

    <div class="form-inline">
        <h4>員工通勤:新增</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*<div class="form-group">
            @Html.LabelFor(model => model.USEDT, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.USEDT, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.USEDT, "", new { @class = "text-danger" })
            </div>
        </div>*@



        <div class="form-group">
            @Html.LabelFor(model => model.USER_ID, htmlAttributes: new { @class = "control-label col-md" })

            @Html.EditorFor(model => model.USER_ID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.USER_ID, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.USER_NAME, htmlAttributes: new { @class = "control-label col-md" })

            @Html.EditorFor(model => model.USER_NAME, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.USER_NAME, "", new { @class = "text-danger" })

        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.TRANSPORTATION, htmlAttributes: new { @class = "control-label col-md" })

            @Html.EditorFor(model => model.TRANSPORTATION, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TRANSPORTATION, "", new { @class = "text-danger" })

        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.TRANSPORTATION, htmlAttributes: new { @class = "control-label" })
            @{
                var listItemsTRANSPORTATION = new List<SelectListItem>
{
                    new SelectListItem { Text = "公司交通車", Value = "公司交通車", Selected = true },
                    new SelectListItem { Text = "公務車", Value = "公務車", Selected = true },
                    new SelectListItem { Text = "汽車", Value = "汽車", Selected = true },
                    new SelectListItem { Text = "油電混合汽車", Value = "油電混合汽車", Selected = true },
                    new SelectListItem { Text = "傳統機車", Value = "傳統機車", Selected = true },
                    new SelectListItem { Text = "電動汽車", Value = "電動汽車", Selected = true },
                    new SelectListItem { Text = "電動腳踏車", Value = "電動腳踏車", Selected = true },
                    new SelectListItem { Text = "電動機車", Value = "電動機車" }
                };
            }
            @Html.DropDownList("TRANSPORTATION", listItemsTRANSPORTATION, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.TRANSPORTATION, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ONEWAY_KM, htmlAttributes: new { @class = "control-label" })

            @*@Html.EditorFor(model => model.ONEWAY_KM, new { htmlAttributes = new { @class = "form-control  align-right", type = "number", step = "0.01" } })*@

            @Html.EditorFor(model => model.ONEWAY_KM, new { htmlAttributes = new { @class = "form-control numeric-input align-right" } })
            @Html.ValidationMessageFor(model => model.ONEWAY_KM, "", new { @class = "text-danger" })

        </div>
        @*此自動填入
        <div class="form-group">
               @Html.LabelFor(model => model.DOUBLE_KM, htmlAttributes: new { @class = "control-label col-md" })

               @Html.EditorFor(model => model.DOUBLE_KM, new { htmlAttributes = new { @class = "form-control" } })
               @Html.ValidationMessageFor(model => model.DOUBLE_KM, "", new { @class = "text-danger" })

           </div>*@




        @*此兩欄自動填入
        <div class="form-group">
            @Html.LabelFor(model => model.data, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.data, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.data, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="存檔" class="btn btn-danger" />
            </div>
        </div>20240424按鈕置中顯示*@
        <!-- 添加一個空div來留出空白 -->
        <div style="height: 50px;"></div>

        <div class="text-center">
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="存檔" class="btn btn-danger" />
                </div>
            </div>
        </div>


    </div>
            }


        </body>
        </html>
