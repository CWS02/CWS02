@model prjWastes6.Models.WASTES
@{
    Layout = "~/Views/Shared/_LayoutMember.cshtml";
}
@{
    ViewBag.Title = "Create";
}
<style>
    .align-right {
        text-align: right;
    }

    .nowrap {
        white-space: nowrap;
    }
</style>
<h2>新增</h2>

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

<script type="text/javascript">
    $(document).ready(function () {
        // 當CLEANER_CODE字段的值更改時
        $("#CLEANER_CODE").change(function () {
            // 獲取所選的CLEANER_CODE值
            var cleanerCode = $(this).val();

            // 根據CLEANER_CODE的值設置相應的PURGE_NAME選項
            if (cleanerCode === "I26A9223") {
                $("#PURGE_NAME").val("嘉禾環保科技有限公司");
            } else if (cleanerCode === "R9004310") {
                $("#PURGE_NAME").val("國家科學及技術委員會南部科學園區管理局(臺南園區資源再生中心)");
            }
        });
    });
</script>
<script type="text/javascript">
    $(document).ready(function () {
        // 當CLEANER_CODE字段的值更改時
        $("#FINAL_DISPOSER_CODE").change(function () {
            // 獲取所選的CLEANER_CODE值
            var FINAL_DISPOSER_CODE = $(this).val();

            // 根據FINAL_DISPOSER_CODE的值設置相應的FINAL_DISPOSER_NAME選項
            if (FINAL_DISPOSER_CODE === "E1603588") {
                $("#FINAL_DISPOSER_NAME").val("大寧股份有限公司");
            } else if (FINAL_DISPOSER_CODE === "R9004310") {
                $("#FINAL_DISPOSER_NAME").val("國家科學及技術委員會南部科學園區管理局(臺南園區資源再生中心)");
            } else if (FINAL_DISPOSER_CODE === "") {
                $("#FINAL_DISPOSER_NAME").val("");
            }
        });
    });
</script>

<script type="text/javascript">
    $(document).ready(function () {
        // 當SCRAP_CODE字段的值更改時
        $("#SCRAP_CODE").change(function () {
            // 獲取所選的CLEANER_CODE值
            var SCRAP_CODE = $(this).val();

            // 根據SCRAP_CODE的值設置相應的PSCRAP_NAME選項
            if (SCRAP_CODE === "D-2499") {
                $("#SCRAP_NAME").val("其他未歸類之一般事業廢棄物");
            } else if (SCRAP_CODE === "D-2399") {
                $("#SCRAP_NAME").val("一般廢化學物質混合物");
            } else if (SCRAP_CODE === "D-1801") {
                $("#SCRAP_NAME").val("生活垃圾");
            } else if (SCRAP_CODE === "D-2406") {
                $("#SCRAP_NAME").val("廢砂輪");
            }
        });
    });
</script>

<script>
    $(document).ready(function () {

        // 為數字輸入框添加格式化事件
        $(".numeric-input").on("input", function () {
            formatNumberInput($(this));
        });


        // 提交表單時移除千位分隔符
        $("form").submit(function () {
            $(".numeric-input").each(function () {
                $(this).val($(this).val().replace(/,/g, ''));
            });
        });
    });

    // 格式化數字輸入框的值
    /*function formatNumberInput(input) {
        var val = input.val().replace(/,/g, ''); // 移除現有的千位分隔符
        if (val != '') {
            val = parseInt(val); // 確保輸入是一個數值
            input.val(val.toLocaleString()); // 使用toLocaleString()添加千位分隔符
        }
    }*/
    // 格式化數字輸入框的值
    function formatNumberInput(input) {
        var val = input.val().replace(/,/g, ''); // 移除現有的千位分隔符
        if (val != '') {
            var parts = val.split('.'); // 將輸入值拆分為整數部分和小數部分
            parts[0] = parseInt(parts[0]).toLocaleString(); // 格式化整數部分
            input.val(parts.join('.')); // 重新組合並設置輸入框的值
        }
    }

</script>

@*20240425增加上傳檔案超過3MB提示 *@
<script>
    $(document).ready(function () {
        $('form').submit(function () {
            var file = $('.pic-upload-input')[0].files[0];
            if (file && file.size > 3 * 1024 * 1024) {
                alert('上傳的 PDF 文件大小不能超過 2MB。');
                return false; // 防止表單提交
            }
        });
    });
</script>

@if (ViewBag.Msg != null)
{
    <div class="alert alert-danger">@ViewBag.Msg</div>
}

@*20240325增加上傳檔案 *@
@*@using (Html.BeginForm()) *@

@using (Html.BeginForm("Create", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))

{
    @Html.AntiForgeryToken()


    <div class="form-inline">
        <h3>廢棄物(南科廠)</h3>
        <h4>
            生活垃圾-聯單編號範例:20240101</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.DOCUMENT_ID, htmlAttributes: new { @class = "control-label" })

        @Html.EditorFor(model => model.DOCUMENT_ID, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.DOCUMENT_ID, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.REMOVAL_DATE, htmlAttributes: new { @class = "control-label" })


        @Html.EditorFor(model => model.REMOVAL_DATE, new { htmlAttributes = new { @class = "form-control", type = "date" } })


        @Html.ValidationMessageFor(model => model.REMOVAL_DATE, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CLEANER_CODE, htmlAttributes: new { @class = "control-label" })
        @{
            var listItemsCLEANER_CODE = new List<SelectListItem>
{
                    new SelectListItem { Text = "I26A9223", Value = "I26A9223", Selected = true },
                    new SelectListItem { Text = "R9004310", Value = "R9004310" }
                };
        }
        @Html.DropDownList("CLEANER_CODE", listItemsCLEANER_CODE, htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.CLEANER_CODE, "", new { @class = "text-danger" })
    </div>




    <div class="form-group">
        @Html.LabelFor(model => model.PURGE_NAME, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.PURGE_NAME, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.PURGE_NAME, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.NUMBER_CARRIER, htmlAttributes: new { @class = "control-label" })

        @Html.EditorFor(model => model.NUMBER_CARRIER, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.NUMBER_CARRIER, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TREATMENT, htmlAttributes: new { @class = "control-label" })

        @{
            var listItemsTREATMENT = new List<SelectListItem>
{
      new SelectListItem { Text = "掩埋", Value = "掩埋", Selected = true },
      new SelectListItem { Text = "焚化處理", Value = "焚化處理" }
    };
        }

        @Html.DropDownList("TREATMENT", listItemsTREATMENT, htmlAttributes: new { @class = "form-control" })

        @Html.ValidationMessageFor(model => model.TREATMENT, "", new { @class = "text-danger" })

    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.FINAL_DISPOSER_CODE, htmlAttributes: new { @class = "control-label" })
        @{
            var listItemsFINAL_DISPOSER_CODE = new List<SelectListItem>
{
                    new SelectListItem { Text = "E1603588", Value = "E1603588", Selected = true },
                    new SelectListItem { Text = "R9004310", Value = "R9004310", Selected = true },
                    new SelectListItem { Text = "", Value = "" }
                };
        }
        @Html.DropDownList("FINAL_DISPOSER_CODE", listItemsFINAL_DISPOSER_CODE, htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.FINAL_DISPOSER_CODE, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FINAL_DISPOSER_NAME, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.FINAL_DISPOSER_NAME, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.FINAL_DISPOSER_NAME, "", new { @class = "text-danger" })
    </div>





    <div class="form-group">
        @Html.LabelFor(model => model.FINAL_DISPOSER, htmlAttributes: new { @class = "control-label" })

        @{
            var listItemsFINAL_DISPOSER = new List<SelectListItem>
{
      new SelectListItem { Text = "掩埋", Value = "掩埋", Selected = true },
      new SelectListItem { Text = "", Value = "" }
    };
        }

        @Html.DropDownList("FINAL_DISPOSER", listItemsFINAL_DISPOSER, htmlAttributes: new { @class = "form-control" })

        @Html.ValidationMessageFor(model => model.FINAL_DISPOSER, "", new { @class = "text-danger" })

    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.SCRAP_CODE, htmlAttributes: new { @class = "control-label" })
        @{
            var listItemsSCRAP_CODE = new List<SelectListItem>
{
                    new SelectListItem { Text = "D-2499", Value = "D-2499", Selected = true },
                    new SelectListItem { Text = "D-2399", Value = "D-2399" , Selected = true },
                    new SelectListItem { Text = "D-2406", Value = "D-2406" , Selected = true },
                    new SelectListItem { Text = "D-1801", Value = "D-1801" }
                };
        }
        @Html.DropDownList("SCRAP_CODE", listItemsSCRAP_CODE, htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.SCRAP_CODE, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SCRAP_NAME, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.SCRAP_NAME, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.SCRAP_NAME, "", new { @class = "text-danger" })
    </div>


    @*<div class="form-group">
            @Html.LabelFor(model => model.DECLARED_WEIGHT, htmlAttributes: new { @class = "control-label" })

            @Html.EditorFor(model => model.DECLARED_WEIGHT, new { htmlAttributes = new { @class = "form-control align-right" } })
            @Html.ValidationMessageFor(model => model.DECLARED_WEIGHT, "", new { @class = "text-danger" })
        </div>*@

    @*20240415在框中顯示千位分隔符號(例如"1,000")的格式*@
    <div class="form-group">
        @Html.LabelFor(model => model.DECLARED_WEIGHT, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.DECLARED_WEIGHT, new { htmlAttributes = new { @class = "form-control numeric-input align-right" } })
        @Html.ValidationMessageFor(model => model.DECLARED_WEIGHT, "", new { @class = "text-danger" })
    </div>


    @*<div class="form-group">
            @Html.LabelFor(model => model.KILOMETERS, htmlAttributes: new { @class = "control-label" })

            @Html.EditorFor(model => model.KILOMETERS, new { htmlAttributes = new { @class = "form-control align-right" } })
            @Html.ValidationMessageFor(model => model.KILOMETERS, "", new { @class = "text-danger" })
        </div>*@

    @*20240415在框中顯示千位分隔符號(例如"1,000")的格式*@
    <div class="form-group">
        @Html.LabelFor(model => model.KILOMETERS, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.KILOMETERS, new { htmlAttributes = new { @class = "form-control numeric-input align-right" } })
        @Html.ValidationMessageFor(model => model.KILOMETERS, "", new { @class = "text-danger" })
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.ACTIVITY_DATA, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.ACTIVITY_DATA, new { htmlAttributes = new { @class = "form-control align-right" } })
            @Html.ValidationMessageFor(model => model.ACTIVITY_DATA, "", new { @class = "text-danger" })
        </div>*@

    @*20240415在框中顯示千位分隔符號(例如"1,000")的格式*@
    @*<div class="form-group">
        @Html.LabelFor(model => model.ACTIVITY_DATA, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.ACTIVITY_DATA, new { htmlAttributes = new { @class = "form-control numeric-input align-right" } })
        @Html.ValidationMessageFor(model => model.ACTIVITY_DATA, "", new { @class = "text-danger" })
    </div>*@

    @*<div class="form-group">
        @Html.LabelFor(model => model.CARBON_EMISSION_FACTOR, htmlAttributes: new { @class = "control-label" })
        @{
            var listItemsCARBON_EMISSION_FACTOR = new List<SelectListItem>
{
                    new SelectListItem { Text = "7.07", Value = "7.07", Selected = true },
                    new SelectListItem { Text = "737", Value = "737" }
                };
        }
        @Html.DropDownList("CARBON_EMISSION_FACTOR", listItemsCARBON_EMISSION_FACTOR, htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.CARBON_EMISSION_FACTOR, "", new { @class = "text-danger" })
    </div>*@


    @*<div class="form-group" ,>
            @Html.LabelFor(model => model.CARBON_DIOXIDE, htmlAttributes: new { @class = "control-label" })

            @Html.EditorFor(model => model.CARBON_DIOXIDE, new { htmlAttributes = new { @class = "form-control align-right" } })
            @Html.ValidationMessageFor(model => model.CARBON_DIOXIDE, "", new { @class = "text-danger" })
        </div>*@

    @*20240415在框中顯示千位分隔符號(例如"1,000")的格式*@
    <div class="form-group">
        @Html.LabelFor(model => model.CARBON_DIOXIDE, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.CARBON_DIOXIDE, new { htmlAttributes = new { @class = "form-control numeric-input align-right" } })
        @Html.ValidationMessageFor(model => model.CARBON_DIOXIDE, "", new { @class = "text-danger" })
    </div>


    <!-- **** 20240327加入輸入傳票號碼**** -->
    <div class="form-group" ,>
        @Html.LabelFor(model => model.VOUCHER_NUMBER, htmlAttributes: new { @class = "control-label" })

        @Html.EditorFor(model => model.VOUCHER_NUMBER, new { htmlAttributes = new { @class = "form-control align-right" } })
        @Html.ValidationMessageFor(model => model.VOUCHER_NUMBER, "", new { @class = "text-danger" })
    </div>


    @*<div>
        <span class="editor-label">
            @Html.LabelFor(model => model.PDF_FILE):
        </span>
        <span class="editor-field">
            <!-- **** 檔案上傳 **** -->
            <input class="pic-upload-input" type="file" name="pdfFile">
            <!-- **** 檔案上傳 **** -->
        </span>
    </div>*@


    @*<div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="存檔" class="btn btn-danger" />
            </div>
        </div>*@

    <!-- 添加一個空div來留出空白 -->
    <div style="height: 50px;"></div>

    <div class="text-center">
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="存檔" class="btn btn-danger" />
            </div>
        </div>
    </div>
</div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
