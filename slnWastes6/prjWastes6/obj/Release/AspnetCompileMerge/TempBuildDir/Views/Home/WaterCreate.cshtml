@model prjWastes6.Models.WATER_BILL

@{
    Layout = "~/Views/Shared/_LayoutMember.cshtml";
}
@{
    ViewBag.Title = "WaterCreate";
}
<style>
    .align-right {
        text-align: right;
    }

    .nowrap {
        white-space: nowrap;
    }
</style>
<h2>新增</h2>
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

<script type="text/javascript">
    $(document).ready(function () {
        // 當FACTORY字段的值更改時
        $("#FACTORY").change(function () {
            // 獲取所選的FACTORY值
            var FACTORY = $(this).val();

            // 根據FACTORY的值設置相應的ELECTRICITY_SIGNAL選項
            if (FACTORY === "南科廠") {
                $("#WATER_SIGNAL").val("63-43233103-3");
                $("#METER_NUMBER").val("110F000365");
                $("#METER_DIAMETER").val("75");
            } else if (FACTORY === "樹谷一期") {
                $("#WATER_SIGNAL").val("63-43233502-2");
                $("#METER_NUMBER").val("104D003834");
                $("#METER_DIAMETER").val("40");
            } else if (FACTORY === "樹谷二期") {
                $("#WATER_SIGNAL").val("63-43233503-8");
                $("#METER_NUMBER").val("103G000227");
                $("#METER_DIAMETER").val("100");
            }
        });
    });
</script>

<script>
    $(document).ready(function () {

        // 為數字輸入框添加格式化事件
        $(".numeric-input").on("input", function () {
            formatNumberInput($(this));
        });


        // 提交表單時移除千位分隔符
        $("form").submit(function () {
            $(".numeric-input").each(function () {
                $(this).val($(this).val().replace(/,/g, ''));
            });
        });
    });

    // 格式化數字輸入框的值
    /*function formatNumberInput(input) {
        var val = input.val().replace(/,/g, ''); // 移除現有的千位分隔符
        if (val != '') {
            val = parseInt(val); // 確保輸入是一個數值
            input.val(val.toLocaleString()); // 使用toLocaleString()添加千位分隔符
        }
    }*/
    // 格式化數字輸入框的值
    function formatNumberInput(input) {
        var val = input.val().replace(/,/g, ''); // 移除現有的千位分隔符
        if (val != '') {
            var parts = val.split('.'); // 將輸入值拆分為整數部分和小數部分
            parts[0] = parseInt(parts[0]).toLocaleString(); // 格式化整數部分
            input.val(parts.join('.')); // 重新組合並設置輸入框的值
        }
    }

</script>
@*20240424增加上傳檔案超過3MB提示 *@
<script>
    $(document).ready(function () {
        $('form').submit(function () {
            var file = $('.pic-upload-input')[0].files[0];
            if (file && file.size > 3 * 1024 * 1024) {
                alert('上傳的 PDF 文件大小不能超過 2MB。');
                return false; // 防止表單提交
            }
        });
    });
</script>


@if (ViewBag.Msg != null)
{
    <div class="alert alert-danger">@ViewBag.Msg</div>
}
@*20240325增加上傳檔案 *@
@*@using (Html.BeginForm()) *@

@using (Html.BeginForm("WaterCreate", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-inline">
    <h4>水費帳單</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.DOCUMENT_ID, htmlAttributes: new { @class = "control-label" })

        @Html.EditorFor(model => model.DOCUMENT_ID, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.DOCUMENT_ID, "", new { @class = "text-danger" })
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.FACTORY, htmlAttributes: new { @class = "control-label" })
        @{
            var listItemsFACTORY = new List<SelectListItem>
{
                    new SelectListItem { Text = "南科廠", Value = "南科廠", Selected = true },
                    new SelectListItem { Text = "樹谷一期", Value = "樹谷一期", Selected = true },
                    new SelectListItem { Text = "樹谷二期", Value = "樹谷二期" }
                };
        }
        @Html.DropDownList("FACTORY", listItemsFACTORY, htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.FACTORY, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.WATER_SIGNAL, htmlAttributes: new { @class = "control-label" })

        @Html.EditorFor(model => model.WATER_SIGNAL, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        @Html.ValidationMessageFor(model => model.WATER_SIGNAL, "", new { @class = "text-danger" })
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.FROM_BILLING_PERIOD, htmlAttributes: new { @class = "control-label" })

        @Html.EditorFor(model => model.FROM_BILLING_PERIOD, new { htmlAttributes = new { @class = "form-control", type = "date" } })
        @Html.ValidationMessageFor(model => model.FROM_BILLING_PERIOD, "", new { @class = "text-danger" })
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.UNTIL_BILLING_PERIOD, htmlAttributes: new { @class = "control-label" })

        @Html.EditorFor(model => model.UNTIL_BILLING_PERIOD, new { htmlAttributes = new { @class = "form-control", type = "date" } })
        @Html.ValidationMessageFor(model => model.UNTIL_BILLING_PERIOD, "", new { @class = "text-danger" })
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.TYPE, htmlAttributes: new { @class = "control-label" })
        @{
            var listItemsTYPE = new List<SelectListItem>
{
                    new SelectListItem { Text = "普通", Value = "普通", Selected = true },
                    new SelectListItem { Text = "工業", Value = "工業" }
                };
        }
        @Html.DropDownList("TYPE", listItemsTYPE, htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.TYPE, "", new { @class = "text-danger" })
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.METER_NUMBER, htmlAttributes: new { @class = "control-label" })


        @Html.EditorFor(model => model.METER_NUMBER, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        @Html.ValidationMessageFor(model => model.METER_NUMBER, "", new { @class = "text-danger" })
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.METER_DIAMETER, htmlAttributes: new { @class = "control-label" })

        @Html.EditorFor(model => model.METER_DIAMETER, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        @Html.ValidationMessageFor(model => model.METER_DIAMETER, "", new { @class = "text-danger" })
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.NUMBER_POINTERS, htmlAttributes: new { @class = "control-label" })

        @Html.EditorFor(model => model.NUMBER_POINTERS, new { htmlAttributes = new { @class = "form-control  align-right" } })
        @Html.ValidationMessageFor(model => model.NUMBER_POINTERS, "", new { @class = "text-danger" })
    </div>
    @*20240327在框中顯示千位分隔符號(例如"1,000")的格式*@
    @*<div class="form-group">
            @Html.LabelFor(model => model.NUMBER_POINTERS, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.NUMBER_POINTERS, new { htmlAttributes = new { @class = "form-control numeric-input align-right" } })
            @Html.ValidationMessageFor(model => model.NUMBER_POINTERS, "", new { @class = "text-danger" })
        </div>*@


    <div class="form-group">
        @Html.LabelFor(model => model.TOTAL_WATER, htmlAttributes: new { @class = "control-label" })

        @Html.EditorFor(model => model.TOTAL_WATER, new { htmlAttributes = new { @class = "form-control  align-right" } })
        @Html.ValidationMessageFor(model => model.TOTAL_WATER, "", new { @class = "text-danger" })
    </div>
    @*20240327在框中顯示千位分隔符號(例如"1,000")的格式*@
    @*<div class="form-group">
            @Html.LabelFor(model => model.TOTAL_WATER, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.TOTAL_WATER, new { htmlAttributes = new { @class = "form-control numeric-input align-right" } })
            @Html.ValidationMessageFor(model => model.TOTAL_WATER, "", new { @class = "text-danger" })
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.TOTAL_BILL_TAX, htmlAttributes: new { @class = "control-label" })

        @Html.EditorFor(model => model.TOTAL_BILL_TAX, new { htmlAttributes = new { @class = "form-control  align-right" } })
        @Html.ValidationMessageFor(model => model.TOTAL_BILL_TAX, "", new { @class = "text-danger" })
    </div>

    @*20240327在框中顯示千位分隔符號(例如"1,000")的格式*@
    @*<div class="form-group">
            @Html.LabelFor(model => model.TOTAL_BILL_TAX, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.TOTAL_BILL_TAX, new { htmlAttributes = new { @class = "form-control numeric-input align-right" } })
            @Html.ValidationMessageFor(model => model.TOTAL_BILL_TAX, "", new { @class = "text-danger" })
        </div>*@
    <div class="form-group">
        @Html.LabelFor(model => model.CARBON_PERIOD, htmlAttributes: new { @class = "control-label" })

        @Html.EditorFor(model => model.CARBON_PERIOD, new { htmlAttributes = new { @class = "form-control  align-right" } })
        @Html.ValidationMessageFor(model => model.CARBON_PERIOD, "", new { @class = "text-danger" })
    </div>
    @*20240327在框中顯示千位分隔符號(例如"1,000")的格式*@
    @*<div class="form-group">
            @Html.LabelFor(model => model.CARBON_PERIOD, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.CARBON_PERIOD, new { htmlAttributes = new { @class = "form-control numeric-input align-right" } })
            @Html.ValidationMessageFor(model => model.CARBON_PERIOD, "", new { @class = "text-danger" })
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.CARBON_EMISSION_FACTOR, htmlAttributes: new { @class = "control-label" })

        @Html.EditorFor(model => model.CARBON_EMISSION_FACTOR, new { htmlAttributes = new { @class = "form-control  align-right" } })
        @Html.ValidationMessageFor(model => model.CARBON_EMISSION_FACTOR, "", new { @class = "text-danger" })
    </div>
    @*20240327在框中顯示千位分隔符號(例如"1,000")的格式*@
    @*<div class="form-group">
            @Html.LabelFor(model => model.CARBON_EMISSION_FACTOR, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.CARBON_EMISSION_FACTOR, new { htmlAttributes = new { @class = "form-control numeric-input align-right" } })
            @Html.ValidationMessageFor(model => model.CARBON_EMISSION_FACTOR, "", new { @class = "text-danger" })
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.CARBON_DIOXIDE, htmlAttributes: new { @class = "control-label" })

        @Html.EditorFor(model => model.CARBON_DIOXIDE, new { htmlAttributes = new { @class = "form-control  align-right" } })
        @Html.ValidationMessageFor(model => model.CARBON_DIOXIDE, "", new { @class = "text-danger" })
    </div>

    @*20240327在框中顯示千位分隔符號(例如"1,000")的格式*@
    @*<div class="form-group">
            @Html.LabelFor(model => model.CARBON_DIOXIDE, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.CARBON_DIOXIDE, new { htmlAttributes = new { @class = "form-control numeric-input align-right" } })
            @Html.ValidationMessageFor(model => model.CARBON_DIOXIDE, "", new { @class = "text-danger" })
        </div>*@
    <!-- **** 20240327加入輸入傳票號碼**** -->
    <div class="form-group">
        @Html.LabelFor(model => model.VOUCHER_NUMBER, htmlAttributes: new { @class = "control-label" })

        @Html.EditorFor(model => model.VOUCHER_NUMBER, new { htmlAttributes = new { @class = "form-control  align-right" } })
        @Html.ValidationMessageFor(model => model.VOUCHER_NUMBER, "", new { @class = "text-danger" })
    </div>

    @*<div>
        <span class="editor-label">
            @Html.LabelFor(model => model.PDF_FILE):
        </span>
        <span class="editor-field">
            <!-- **** 檔案上傳 **** -->
            <input class="pic-upload-input" type="file" name="pdfFile">
            <!-- **** 檔案上傳 **** -->
        </span>
    </div>*@

    @*<div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="存檔" class="btn btn-danger" />
            </div>
        </div>*@

    <!-- 添加一個空div來留出空白 -->
    <div style="height: 50px;"></div>

    <div class="text-center">
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="存檔" class="btn btn-danger" />
            </div>
        </div>
    </div>
</div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
